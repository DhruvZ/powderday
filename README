Welcome to Powderday!  

Powderday is a dust radiative transfer package designed to interface
with galaxy formation simulations in order to produce spectral energy
distributions, as well as realistic images.  The code utilizes FSPS
(and its python hooks) for stellar SEDs, and Hyperion for dust
radiative transfer.  Threaded throughout is yt.

The code has two principle aims - to be flexible (and extremely
modular), and to be easy to use.  The package is written in python,
though makes use of fortran, C and cython.  

As of now, the code works principally for Gadget, Gizmo and other
variants.  Support for Gasoline, RAMSES, ART and Enzo are planned
however.

For further instructions, please see the installation guide, and
ever-evolving user manual in the src/docs.


Quick and Dirty INSTALLATION NOTES:

0. Install yt - note, you need at least the 3.0 version which, thanks
to the recent release of 3.0, makes this the 'stable' version.  That
said, since at least some future updates to powderday will happen
through yt, it's safest to install the 'development' version.

1. Switch your python to the yt version.  You can do this via either
'activating' yt: 

> source YT_DEST/bin/activate

or in your bashrc: 

>export PATH=$HOME/yt-x86_64/bin:$PATH

At the terminal, this should work:

>thundersnow:~ desika$ which python
>/Users/desika/yt-x86_64/bin/python


2. Install scipy  - this is easily done via pip (which comes with yt):

>pip install scipy

3. Install Astropy: 

>pip install Astropy

4. Install Hyperion: 

http://docs.hyperion-rt.org/en/stable/installation/installation.html

in order you should: 
(a) Install the Fortran dependencies:  http://docs.hyperion-rt.org/en/stable/installation/fortran_dependencies.html

(b) make sure you have all the python dependencies installed (I think most come with yt; if not, there are handy links to each of these at: http://docs.hyperion-rt.org/en/stable/installation/python_dependencies.html  )

(c) Install hyperion: http://docs.hyperion-rt.org/en/stable/installation/installation.html

5. Install ATpy
> pip install ATpy

6. Install FSPS

http://people.ucsc.edu/~conroy/FSPS.html

7. Install python-fsps

http://dan.iel.fm/python-fsps/current/installation/

NOTE - in here, be sure to revert your FSPS install to the correct
revision number required by python-fsps.  

8: Download and unpack the Hyperion dust files:

http://docs.hyperion-rt.org/en/stable/dust/dust.html

put these wherever you want, but you'll need the location of this for your parameters_master.py file


=========================================
TROUBLE SHOOTING: Installation
=========================================


1. If you have errors installing python-fsps:

1.a make sure you have the latest version of fsps installed 

1.b  If there's an error with -fPIC in building python-fsps, then try
include that flag in the FSPS makefile.  You can do this by adding
-fPIC to the F90FLAGS in the Makefile for FSPS, i.e.

>F90FLAGS = -O -cpp -fPIC

1.c to install python-fsps, you need to have f2py installed.  this
comes with the yt installation, but is named f2py2.7 and is in:

/Users/desika/yt-x86_64/bin

so, simply go to that directory and do:

> ln -s f2py2.7 f2py

1.d also you need to go to yt-x86_64/lib/python2.7/site-packages  and do

>ln -s numpy/f2py/ f2py



2. Compiling Hyperion:

2a.  if you get an error "ld: library not found for -lcrt1.10.5.o" and
you run mac os x, it could be that you have issues with the command
line tools installation (especially with mavericks).  if you run
mavericks, do:

>sudo xcode-select --install

and wait 30 minutes while it downloads and installs command line tools!




=========================================
TROUBLE SHOOTING: Running
=========================================

Order of operations:

(1) Make sure your SED and results are resolution converged (by either
zooming in on the region of interest in a cosmological simulation, or
decreasing the cell size via n_ref)



Memory Errors:

(1) If you get it at the beginning of the peeled images set up, try
changing the track_origin from detailed-->basic in pd_front_end